// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservas.Data;

#nullable disable

namespace Reservas.Migrations
{
    [DbContext(typeof(ReservasContext))]
    [Migration("20241110173518_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reservas.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtividade"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeAtividade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAtividade");

                    b.HasIndex("EventoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Reservas.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoIngresso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Reservas.Models.Participante", b =>
                {
                    b.Property<int>("IdParticipante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParticipante"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdParticipante");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("Reservas.Models.ParticipanteAtividade", b =>
                {
                    b.Property<int>("IdParticipante")
                        .HasColumnType("int");

                    b.Property<int>("IdAtividade")
                        .HasColumnType("int");

                    b.HasKey("IdParticipante", "IdAtividade");

                    b.HasIndex("IdAtividade");

                    b.ToTable("ParticipanteAtividades");
                });

            modelBuilder.Entity("Reservas.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Reservas.Models.Atividade", b =>
                {
                    b.HasOne("Reservas.Models.Evento", null)
                        .WithMany("Atividades")
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("Reservas.Models.ParticipanteAtividade", b =>
                {
                    b.HasOne("Reservas.Models.Atividade", "Atividade")
                        .WithMany("ParticipanteAtividades")
                        .HasForeignKey("IdAtividade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservas.Models.Participante", "Participante")
                        .WithMany("ParticipanteAtividades")
                        .HasForeignKey("IdParticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Reservas.Models.Reserva", b =>
                {
                    b.HasOne("Reservas.Models.Evento", "Evento")
                        .WithMany("Reservas")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservas.Models.Participante", "Participante")
                        .WithMany("Reservas")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("Reservas.Models.Atividade", b =>
                {
                    b.Navigation("ParticipanteAtividades");
                });

            modelBuilder.Entity("Reservas.Models.Evento", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Reservas.Models.Participante", b =>
                {
                    b.Navigation("ParticipanteAtividades");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
